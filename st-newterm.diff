diff --color -up st/config.def.h st.new/config.def.h
--- st/config.def.h	2021-02-23 15:59:13.239383248 +0100
+++ st.new/config.def.h	2021-02-23 16:00:59.119381066 +0100
@@ -225,6 +225,7 @@ static Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Prior,       zoom,           {.f = +1} },
 	{ TERMMOD,              XK_Next,        zoom,           {.f = -1} },
 	{ TERMMOD,              XK_Home,        zoomreset,      {.f =  0} },
+	{ MODKEY|ShiftMask,     XK_Return,      newterm,        {.i =  0} },
 	{ TERMMOD,              XK_C,           clipcopy,       {.i =  0} },
 	{ TERMMOD,              XK_V,           clippaste,      {.i =  0} },
 	{ TERMMOD,              XK_Y,           clippaste,      {.i =  0} },
Common subdirectories: st/.git and st.new/.git
diff --color -up st/st.c st.new/st.c
--- st/st.c	2021-02-23 15:59:13.249383248 +0100
+++ st.new/st.c	2021-02-23 16:02:43.369378916 +0100
@@ -161,6 +161,7 @@ typedef struct {
 } STREscape;
 
 static void execsh(char *, char **);
+static char *getcwd_by_pid(pid_t pid);
 static void stty(char **);
 static void sigchld(int);
 static void sigusr1(int);
@@ -1138,6 +1139,26 @@ kscrollup(const Arg* a)
 }
 
 void
+newterm(const Arg* a)
+{
+	switch (fork()) {
+	case -1:
+		die("fork failed: %s\n", strerror(errno));
+		break;
+	case 0:
+		chdir(getcwd_by_pid(pid));
+		execlp("st", "./st", NULL);
+		break;
+	}
+}
+
+static char *getcwd_by_pid(pid_t pid) {
+	char buf[32];
+	snprintf(buf, sizeof buf, "/proc/%d/cwd", pid);
+	return realpath(buf, NULL);
+}
+
+void
 tscrolldown(int orig, int n, int copyhist)
 {
 	int i;
diff --color -up st/st.h st.new/st.h
--- st/st.h	2021-02-23 15:59:13.239383248 +0100
+++ st.new/st.h	2021-02-23 16:03:16.409378235 +0100
@@ -85,6 +85,7 @@ void draw(void);
 void externalpipe(const Arg *);
 void kscrolldown(const Arg *);
 void kscrollup(const Arg *);
+void newterm(const Arg *);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
